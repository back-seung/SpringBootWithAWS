package com.seung.booboo.springboot.web;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;import org.springframework.test.context.junit4.SpringRunner;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;import static org.hamcrest.Matchers.is;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;import org.springframework.test.web.servlet.result.MockMvcResultMatchers;@RunWith(SpringRunner.class) // 스프링부트 테스트와 JUnit 사이의 연결자 역할@WebMvcTest(controllers = HelloController.class)// 여러 테스트 @중 Web에 집중할 수 있는 @.// 선언하면 @Controller, ControllerAdvice 등 사용 가능. 단, @Service, @Repository, @Component는 X.public class HelloControllerTest {    @Autowired    private MockMvc mvc; // Web API 테스트 시 사용, MVC 테스트 시작점, HTTP GET, POST에 대한 API 테스트 가능    @Test    public void hello가_리턴된다() throws Exception {        String hello = "hello";        mvc.perform(MockMvcRequestBuilders.get("/hello")) // MockMVC를 통해 /hello 주소로 GET 요청을 받음                .andExpect(status().isOk()) // 결과 검증 Http Header의 Status 검증 (200, 404, 500 등) >>>>> 여기선 200인지 아닌지를 검사함                .andExpect(MockMvcResultMatchers.content().string(hello)); // 응답 본문의 내용 검증, hello를 리턴하는데 이 값이 맞는지 검증함.    }    @Test    public void HelloDTO가_리턴된다() throws Exception {        String name = "hello";        int amount = 1000;        mvc.perform(                get("/hello/dto")                    .param("name", name)                    .param("amount", String.valueOf(amount)))                .andExpect(status().isOk())                .andExpect(jsonPath("$.name", is(name)))                .andExpect(jsonPath("$.amount", is(amount)));    /*    * `param` :    * * API 테스트 시 사용할 요청 파라미터 설정, String만 가능(다른 타입은 문자열로 변경해야함)    *    * */    }}